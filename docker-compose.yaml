version: '3.8'
services:

  ec-site:
    build:
      context: ./docker/java
    ports:
      - 8080:8080
    tty: true
    volumes:
      - ./sample-ec-site/ec-site:/usr/src/ec-site
      - ./docker/promtail/app-logs:/usr/src/ec-site/log
    env_file:
      - .env
  
  backend:
    build:
      context: ./docker/java
    ports:
      - 8081:8080
    tty: true
    volumes:
      - ./sample-ec-site/backend:/usr/src/backend
      - ./docker/promtail/app-logs:/usr/src/backend/log
    env_file:
      - .env

  batch:
    build:
      context: ./docker/java
    tty: true
    volumes:
      - ./sample-ec-site/batch:/usr/src/batch
      - ./docker/promtail/app-logs:/usr/src/batch/log
    env_file:
      - .env

  config-server:
    build:
      # context: ./docker/java/Dockerfile
      context: ./sample-ec-site/config-server
    ports:
      - 8888:8888
    # tty: true
    volumes:
      # - ./sample-ec-site/config-server:/usr/src
      - ./docker/promtail/app-logs:/usr/src/log
    env_file:
      - .env

  https-portal:
    image: steveltn/https-portal
    ports:
      - '80:80'
      - '443:443'
    environment:
      DOMAINS: 'ec-site.com -> http://host.docker.internal:8080'
      STAGE: 'local'
    volumes:
      - ./docker/https-portal/data:/var/lib/https-portal

  gitea:
    image: gitea/gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - ./docker/gitea/data:/data
    ports:
      - "3001:3000"  # 3000から3001に変更
      - "22:22"
    
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
  
  redis:
    image: redis:latest
    # volumes:
    #   - ./docker/redis:/data
    ports:
      - "6379:6379"

  localstack:
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./docker/localstack/init:/etc/localstack/init/ready.d"
  
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/config/loki-config.yml
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - ./docker/loki/loki-config.yml:/etc/config/loki-config.yml
      - ./docker/loki/data:/data/loki
  
  promtail:
    image: grafana/promtail
    command:
      # - --enable-feature=exemplar-storage
      - --config.file=/etc/promtail/promtail.yml
    environment:
      - TZ=Asia/Tokyo
    depends_on:
      - loki
    volumes:
      - ./docker/promtail/promtail.yml:/etc/promtail/promtail.yml
      - ./docker/promtail/app-logs:/var/logs
    ports:
      - "9080:9080"
    

  prometheus:
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - loki
    ports:
      - '9090:9090'

  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yml" ]
    depends_on:
      - loki
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
      - ./docker/tempo/data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "9411:9411"   # zipkin
      # - "4317:4317"   # for Grafana Agent exports via gRPC using OTLP

  grafana:
    image: grafana/grafana
    environment:
      TZ: Asia/Tokyo
    depends_on:
      - loki
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
