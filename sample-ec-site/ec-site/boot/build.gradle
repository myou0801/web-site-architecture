plugins {
    alias(libs.plugins.spring.boot.plugin)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.jig.plugin)
}


dependencies {

    implementation(platform(libs.spring.cloud.dependencies))
    implementation(platform(libs.spring.cloud.aws.dependencies))

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-metrics'

    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    // implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    // implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation libs.logback.access.spring
    implementation libs.logstash.logback.encoder

    implementation project(':presentation')
    implementation project(':application')
    implementation project(':infrastructure')

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.apache.httpcomponents.client5:httpclient5'

}

//bootJar {
//    mainClass.set('com.myou.ec.ecsite.EcSiteApplication')
//}
